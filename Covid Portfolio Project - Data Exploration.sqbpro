/*
Covid-19 Data Exploration


Skills used: JOINs, CTEs, Temp Tables, Windows functions, aggregate functions, creating views, converting data types

*/


--Select Data that we are going to be using

SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM CovidDeaths
Order BY 1,2;

-- Looking at Total cases vs Total Deaths
-- Shows percentage chance of death if covid-19 contracted
SELECT Location, date, total_cases,  total_deaths,  (total_deaths/total_cases)*100 AS DeathPercentage
FROM CovidDeaths
WHERE location like '%states%'
AND continent IS NOT NULL
Order BY 1,2;

-- Looking at Total Cases vs Population
-- Shows what percentage of population got covid
SELECT Location, date, population,  total_cases,  (total_cases/population)*100 AS ContractedPercentage
FROM CovidDeaths
WHERE location like '%states%'
AND continent IS NOT NULL
Order BY 1,2;

-- Looking at Countries with HIghest Infection Rate compared to Population

SELECT Location,  population,  MAX(total_cases)  AS HighestInfectionCount,  MAX((total_cases/population))*100 AS
	PercentPopulationInfected
FROM CovidDeaths
--WHERE location like '%states%'
WHERE continent IS NOT NULL
GROUP BY location, population
Order BY PercentPopulationInfected DESC;

-- Showing Countries with Highest Death Count per Population

Select location, MAX(Total_deaths) as TotalDeathCount
FROM CovidDeaths
WHERE  continent IS NOT NULL
GROUP BY Location
ORDER BY TotalDeathCount DESC;

-- LET'S BREAK THINGS DOWN BY CONTINENT

Select location, MAX(Total_deaths) as TotalDeathCount
FROM CovidDeaths
WHERE  continent IS NULL
GROUP BY location
ORDER BY TotalDeathCount DESC;

-- Showing the continents with the highest death count per population

Select continent, MAX(Total_deaths) as TotalDeathCount
FROM CovidDeaths
WHERE  continent IS NOT NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC;

-- GLOBAL NUMBERS

SELECT SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths,
	SUM(new_deaths)/ SUM(new_cases)*100 AS DeathPercentage
FROM CovidDeaths
WHERE continent IS NOT NULL
--GROUP BY date
ORDER BY 1,2;

-- Looking at Total Population vs Vaccinations

SELECT CovidDeaths.continent, CovidDeaths.location, CovidDeaths.date, CovidDeaths.population, CovidVaccinations.new_vaccinations,
SUM(CovidVaccinations.new_vaccinations) OVER (Partition BY CovidDeaths.location ORDER BY CovidDeaths.location,
	CovidDeaths.date) AS RollingPeopleVaccinated--, (RollingPeopleVaccinated/population) *100
FROM CovidDeaths 
JOIN CovidVaccinations 
	ON CovidDeaths.location = CovidVaccinations.location
	AND CovidDeaths.date = CovidVaccinations.date
WHERE CovidDeaths.continent IS NOT NULL
ORDER BY 2,3;

-- USE CTE

With PopvsVac (Continent, Location, Date, Population , new_vaccinations, RollingPeopleVaccinated)
AS (
SELECT CovidDeaths.continent, CovidDeaths.location, CovidDeaths.date, CovidDeaths.population, CovidVaccinations.new_vaccinations,
SUM(CovidVaccinations.new_vaccinations) OVER (Partition BY CovidDeaths.location ORDER BY CovidDeaths.location,
	CovidDeaths.date) AS RollingPeopleVaccinated--, (RollingPeopleVaccinated/population) *100
FROM CovidDeaths 
JOIN CovidVaccinations 
	ON CovidDeaths.location = CovidVaccinations.location
	AND CovidDeaths.date = CovidVaccinations.date
WHERE CovidDeaths.continent IS NOT NULL
--ORDER BY 2,3;
)
SELECT *, (RollingPeopleVaccinated/Population)*100
FROM PopvsVac

-- TEMP TABLE

DROP TABLE IF exists #PercentPopulationVaccinated
CREATE TABLE #PercentPopulationVaccinated
(
continent nvarchar(255),
location nvarchar(255),
Date datetime,
population numeric,
new_vaccinations numeric,
RollingPeopleVaccinated NUMERIC
)

INSERT INTO
SELECT CovidDeaths.continent, CovidDeaths.location, CovidDeaths.date, CovidDeaths.population, CovidVaccinations.new_vaccinations,
SUM(CovidVaccinations.new_vaccinations) OVER (Partition BY CovidDeaths.location ORDER BY CovidDeaths.location,
	CovidDeaths.date) AS RollingPeopleVaccinated--, (RollingPeopleVaccinated/population) *100
FROM CovidDeaths 
JOIN CovidVaccinations 
	ON CovidDeaths.location = CovidVaccinations.location
	AND CovidDeaths.date = CovidVaccinations.date
WHERE CovidDeaths.continent IS NOT NULL
--ORDER BY 2,3;	
	
SELECT *, (RollingPeopleVaccinated/Population)*100
FROM #PercentPopulationVaccinated;


-- Creating Views to store data for later visualization

CREATE VIEW PercentPopulationVaccinated AS
SELECT CovidDeaths.continent, CovidDeaths.location, CovidDeaths.date, CovidDeaths.population, CovidVaccinations.new_vaccinations,
SUM(CovidVaccinations.new_vaccinations) OVER (Partition BY CovidDeaths.location ORDER BY CovidDeaths.location,
	CovidDeaths.date) AS RollingPeopleVaccinated--, (RollingPeopleVaccinated/population) *100
FROM CovidDeaths 
JOIN CovidVaccinations 
	ON CovidDeaths.location = CovidVaccinations.location
	AND CovidDeaths.date = CovidVaccinations.date
WHERE CovidDeaths.continent IS NOT NULL
--ORDER BY 2,3;	

CREATE VIEW DeathPercentage AS
SELECT SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths,
	SUM(new_deaths)/ SUM(new_cases)*100 AS DeathPercentage
FROM CovidDeaths
WHERE continent IS NOT NULL
--GROUP BY date
ORDER BY 1,2;

CREATE VIEW TotalDeathPerContinent AS
Select continent, MAX(Total_deaths) as TotalDeathCount
FROM CovidDeaths
WHERE  continent IS NOT NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
